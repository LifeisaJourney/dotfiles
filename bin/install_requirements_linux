#!/bin/bash

RUBY_VERSION='2.3.1'
NODE_VERSION='6.2.1'

RED='\033[0;31m'
PURPLE='\033[0;35m'
RESET='\033[0m'
script="$(basename "$0")"

log() {
  echo -e "${PURPLE}${script}:${RESET} $1"
}

fail() {
  echo -e "${RED}${script} failed:${RESET} $1" >&2
  exit 1
}

clear
log "Linux Development Setup"
log "Each group of packages will be install one at a time. Follow the prompts to continue."
log "Updating packages..."
read -p "Press enter to continue"

OS="$(lsb_release -si)"
if [[ "$OS" =~ ^(Ubuntu|Debian)$ ]]; then
  # Updates package lists
  sudo apt-get update
  # Updates packages to newest version
  sudo apt-get upgrade
else
  fail "Unsupported flavor or Linux"
fi

log "Package upgrade complete..."
read -p "Press enter to continue"
log "Installing git next..."
clear

## Git
log "Please enter your git name"
read name
log "Please enter your git associated email address"
read email

sudo apt-get install git
git config --global color.ui true
git config --global user.name "$name"
git config --global user.email $email

log "Git Install complete"
log "Installing Dependencies next..."
read -p "Press enter to continue"
clear

## Dependencies
sudo apt-get install autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev
sudo apt-get update

log "Dependencies installed..."
read -p "Press enter to continue"
clear

## Postgresql

if which psql > /dev/null; then
  log "Postgresql already installed"
else
  sudo apt-get install postgresql postgresql-contrib
  # creates admin role in psql for current user
  sudo -u postgres createuser "$USER" -s
fi

log "Postgresql install complete..."
log "Installing Rbenv next..."
read -p "Press enter to continue"

if which rbenv > /dev/null; then
  log "rbenv already installed"
else
  git clone https://github.com/rbenv/rbenv.git ~/.rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc || fail "unable to add PATH variable"
  echo 'eval "$(rbenv init -)"' >> ~/.bashrc || fail "could not activate rbenv"
  source ~/.bashrc
  git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
fi

log "Rbenv installed"
log "Installing NVM, Node and NPM next..."
read -p "Press enter to continue"
clear

##NVM (node version manager), Node, and NPM

if [[ -d "$NVM_DIR" ]]; then
  log "NVM already installed."
else
  curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
  source ~/.bashrc
fi

source ~/.nvm/nvm.sh
if nvm ls "$NODE_VERSION" > /dev/null; then
  log "Node v$NODE_VERSION already installed."
else
  nvm install "$NODE_VERSION"
  nvm use node "$NODE_VERSION"
  npm install -g npm
fi

log "NVM, Node and NPM install complete"
read -p "Press enter to continue"
clear
