#!/bin/bash
RUBY_VERSION='2.3.1'
NODE_VERSION='6.2.1'

RED='\033[0;31m'
PURPLE='\033[0;35m'
RESET='\033[0m'
script="$(basename "$0")"

log() {
  echo -e "${PURPLE}${script}:${RESET} $1"
}

fail() {
  echo -e "${RED}${script} failed:${RESET} $1" >&2
  exit 1
}

cd "$( dirname "$0" )/../requirements"
requirements_dir="$( pwd )"

log "Installing Homebrew..."
if which brew > /dev/null; then
  log "Hombrew already installed. Updating..."
  brew update
  brew upgrade rbenv ruby-build
  log "Hombrew updated."
else
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" \
    || fail "could not install Homebrew"
  log "Hombrew installed."
fi

log "Installing Brew formulae..."
brew install $(cat "brew-formulae.txt") \
  || log 'Brew install failed. Look at the logs and try running `brew doctor`.'
log "Brew formulae installed."

log "Installing Ruby gems..."
export PATH="/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH"
# ^ ensure Postgres libs are available so pg gem can install


log "Installing NVM..."
[[ -n "$NVM_DIR" ]] || export NVM_DIR="$HOME/.nvm"
if [[ -d "$NVM_DIR" ]]; then
  log "NVM already installed."
else
  git clone https://github.com/creationix/nvm.git "$NVM_DIR" \
    && cd "$NVM_DIR" \
    && git checkout `git describe --abbrev=0 --tags` \
    || fail "could not install NVM"
  log "NVM installed."
fi
log "Activating NVM..."
cd "$NVM_DIR"
source nvm.sh
cd "$requirements_dir"
log "NVM Activated."

log "Installing Node..."
if nvm ls "$NODE_VERSION" > /dev/null; then
  log "Node v$NODE_VERSION already installed."
else
  nvm install "$NODE_VERSION" || fail "could not install Node"
  nvm alias default "$NODE_VERSION"
  log "Node v$NODE_VERSION Installed."
fi
